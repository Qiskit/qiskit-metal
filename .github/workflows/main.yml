name: Tests
on:
  # Run this workflow every time a new commit is pushed to or a pull request is created from one of these branches
  push:
    branches: [ master, 'stable/*' ]
  pull_request:
    branches: [ master, 'stable/*' ]
jobs:
  tests:
    # Name the Job
    name: tests-python${{ matrix.python-version }}-${{ matrix.os }}
    # Set the type of machine to run on
    runs-on: ${{ matrix.os }}
    # Set matrix for runs-on
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]
        os: ["macOS-latest", "ubuntu-latest", "windows-latest"]
    steps:
      - name: Chekout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-${{ hashFiles('setup.py','requirements-dev.txt','requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}
      - name: Install Deps
        run: python -m pip install -U tox setuptools virtualenv wheel
      - name: Install and Run Tests
        run: tox -e py
  windows-tests:
    name: tests-python${{ matrix.python-version }}-windows
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.7.8]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~\AppData\Local\pip\Cache
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-${{ hashFiles('setup.py','requirements-dev.txt','requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-tests-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install deps
        run: pip install -U tox cvxopt setuptools virtualenv wheel
        shell: pwsh
      - name: Install and Run Tests
        run: tox --sitepackages -epy
        shell: bash -l {0}
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-lint-${{ hashFiles('setup.py','requirements-dev.txt','requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-lint-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}-
      - name: Install Deps
        run: python -m pip install -U tox
      - name: Run lint
        run: tox -elint
  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-docs-${{ hashFiles('setup.py','requirements-dev.txt','requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-docs-
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install Deps
        run: python -m pip install -U tox
      - name: Build Docs
        run: tox -edocs
      - uses: actions/upload-artifact@v2
        with:
          name: html_docs
          path: docs/_build/html
  tutorials:
    name: tutorials
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-${{ matrix.python-version }}-pip-tutorials-${{ hashFiles('setup.py','requirements-dev.txt','requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.python-version }}-pip-tutorials-
            ${{ runner.os }}-${{ matrix.python-version }}-pip-
            ${{ runner.os }}-${{ matrix.python-version }}-
      - name: Setup tutorials job
        run: |
          set -e
          python -m pip install --upgrade pip
          pip install -U -r requirements-dev.txt
          pip install git+https://github.com/Qiskit/qiskit-metal
          pip install -ve .
          pip install -U "pyscf<1.7.4" "matplotlib<3.3.0" pylatexenc sphinx nbsphinx qiskit_sphinx_theme cvxpy
          python setup.py build_ext --inplace
          sudo apt install -y graphviz pandoc
          pip check
        shell: bash
      - name: Run Tutorials
        run: |
          set -e
          cd guide
          sphinx-build -b html . _build/html
      - uses: actions/upload-artifact@v2
        with:
          name: tutorials_html
          path: guide/_build/html
